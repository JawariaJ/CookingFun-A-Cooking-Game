/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CookingFun;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author toshiba
 */
public class birthday extends javax.swing.JFrame {
     private Connection con;
    private Statement st;
    private ResultSet rs;
    
   // these boolean var are used for enabling and disabling the ingredients(labels)

    boolean b,g,s,c;
  
        // score counting 

    protected int count;
   
   //  used for calculting the clicks on ingredient
 
    int click;
     
    // this var is used for looser frame's try again button 
    // we use it for transfering the string to looser frame 
    // suppose if user is playing on any of the cake interface and he lost with the score 0 and < 0 
    // then he want to try it again , for this purpose to show him the specific cake interface again 
    // for this we are passing the string alphabet as the type of burger user is playing ,eg: for cupcake "ck" , for birthday cake "bk" etc
    // and then for making same cake again he will get the same interface again

    String cond;
     
// mouse pressed on the scrren
    int xmouse1;
    int ymouse1;
    // mouse dragged on the screen 
    int x2;
    int y2;
   // mouse pressed on the object(ingredient)
    int xmousecake;
    int ymousecake;
    int xmousesmile;
    int ymousesmile;
    int xmousecre;
    int ymousecre;
    int xmousecand;
    int ymousecand;
    
    /**
     * Creates new form birthday
     */
    public birthday() {
        initComponents();
         click = 0;
        count = 0;
        b = true;
        g = false;
       
        c = false;
        s = false;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        smile = new javax.swing.JLabel();
        candel = new javax.swing.JLabel();
        glaze = new javax.swing.JLabel();
        cakebase = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        done = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 0, 102));
        jPanel1.setLayout(null);

        smile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ab/smile.png"))); // NOI18N
        smile.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                smileMouseDragged(evt);
            }
        });
        smile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                smileMousePressed(evt);
            }
        });
        jPanel1.add(smile);
        smile.setBounds(560, 370, 40, 30);

        candel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ab/candel.png"))); // NOI18N
        candel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                candelMouseDragged(evt);
            }
        });
        candel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                candelMousePressed(evt);
            }
        });
        jPanel1.add(candel);
        candel.setBounds(460, 340, 50, 100);

        glaze.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ab/bcg.png"))); // NOI18N
        glaze.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                glazeMouseDragged(evt);
            }
        });
        glaze.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                glazeMousePressed(evt);
            }
        });
        jPanel1.add(glaze);
        glaze.setBounds(280, 350, 150, 90);

        cakebase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ab/bcb.png"))); // NOI18N
        cakebase.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                cakebaseMouseDragged(evt);
            }
        });
        cakebase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cakebaseMousePressed(evt);
            }
        });
        jPanel1.add(cakebase);
        cakebase.setBounds(80, 330, 170, 120);

        back.setBackground(new java.awt.Color(255, 255, 0));
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ab/back.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back);
        back.setBounds(530, 60, 48, 50);

        done.setBackground(new java.awt.Color(255, 255, 0));
        done.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ab/done.png"))); // NOI18N
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });
        jPanel1.add(done);
        done.setBounds(530, 190, 52, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/cutting-board128.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(200, 170, 128, 90);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ab/Cap.PNG"))); // NOI18N
        jLabel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel2MouseDragged(evt);
            }
        });
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        jPanel1.add(jLabel2);
        jLabel2.setBounds(60, 30, 600, 420);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
       CakeMenu pm = new CakeMenu();
         pm.setVisible(true);
       this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
      // if all the ingrediets true only then done button will be enabled
        if (b && g && c && s ) {            
            try {
               
            String urlDB = System.getProperty("user.dir").concat("\\records1.accdb");

            con = DriverManager.getConnection("jdbc:ucanaccess://" + urlDB + ";memory=true");
            st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery("select* from records");
       
                 while(rs.next()){
                PreparedStatement s = con.prepareStatement("UPDATE records SET Score=? where Name='"+ login.name +"'"); 
                     
                // successfully done 

                if (count > 0 && count<4) {
               s.setInt(1, count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added"); 
               
               Successful_score S = new Successful_score(count);
                S.setVisible(true);
                this.dispose();
            }  
// looser
                else if(count<=0) 
            {s.setInt(1, count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added");
                
                     // cond will store string according to menu name eg: bithday cake so "bk" 
                    cond="bk";
                LooserFrame l = new LooserFrame(count,cond);
                l.setVisible(true);
                this.dispose();
            } 
                 // full score and winner
                else if(count>3)
               {s.setInt(1, count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added");
           
                    Winner w= new Winner();
            w.setVisible(true);
            this.dispose();
     }
                 }  }
            catch (SQLException ex) {
                Logger.getLogger(SimpleBurger.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                 try {
            con.close();
            rs.close();
            st.close();
        } catch (SQLException ex) {
            Logger.getLogger(BakedPlainPizza.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        }
            
        }
       // TODO add your handling code here:
    }//GEN-LAST:event_doneActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
         xmouse1= evt.getX();
       ymouse1 =evt.getY();// TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseDragged
         int xdrag1=evt.getXOnScreen();
            int ydrag1=evt.getYOnScreen();
             x2=xdrag1;
             y2=ydrag1;// TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseDragged

    private void cakebaseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cakebaseMousePressed
       click++;
       if(b){
        xmousecake= evt.getX();
       ymousecake =evt.getY();// TODO add your handling code here:
       if(click==1)
           count++;
    }
    else
    count--;
    }//GEN-LAST:event_cakebaseMousePressed

    private void cakebaseMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cakebaseMouseDragged
        if(b){
        int x = evt.getXOnScreen();
          int y = evt.getYOnScreen();
         cakebase.setLocation((x-x2)-(xmousecake-xmouse1), (y-y2)-(ymousecake-ymouse1));
           cakebase.setVisible(true);// TODO add your handling code here:
           b = true;
        
        g = true;
        s=false;
        c=false;
       }
       click=0;
    }//GEN-LAST:event_cakebaseMouseDragged

    private void glazeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_glazeMousePressed
        click++;
        if(g){
        xmousecre= evt.getX();
       ymousecre =evt.getY();
       if(click==1)
           count++;
        }
        count--;
    }//GEN-LAST:event_glazeMousePressed

    private void glazeMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_glazeMouseDragged
        if(g){
        int x = evt.getXOnScreen();
          int y = evt.getYOnScreen();
         glaze.setLocation((x-x2)-(xmousecre-xmouse1), (y-y2)-(ymousecre-ymouse1));
           glaze.setVisible(true);// TODO add your handling code here:
            b = true;
        
        g = true;
        s=true;
        c=false;
       }
       click=0;
    }//GEN-LAST:event_glazeMouseDragged

    private void candelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_candelMousePressed
        click++;
        if(c){
        xmousecand= evt.getX();
       ymousecand =evt.getY();// TODO add your handling code here:
       if(click==1)
           count++;
        }
        else
            count--;
    }//GEN-LAST:event_candelMousePressed

    private void candelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_candelMouseDragged
       if(c){
        int x = evt.getXOnScreen();
          int y = evt.getYOnScreen();
         candel.setLocation((x-x2)-(xmousecand-xmouse1), (y-y2)-(ymousecand-ymouse1));
          candel.setVisible(true);// TODO add your handling code here:
           b = true;
        
        g = true;
        s=true;
        c=true;
       }
       click=0;
    }//GEN-LAST:event_candelMouseDragged

    private void smileMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smileMousePressed
         click++;
         if(s){
        xmousesmile= evt.getX();
       ymousesmile =evt.getY();// TODO add your handling code here:
       if(click==1)
          count++; 
       }
         else
             count--;
    }//GEN-LAST:event_smileMousePressed

    private void smileMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smileMouseDragged
      if(g){
        int x = evt.getXOnScreen();
          int y = evt.getYOnScreen();
        smile.setLocation((x-x2)-(xmousesmile-xmouse1), (y-y2)-(ymousesmile-ymouse1));
           smile.setVisible(true); // TODO add your handling code here:
            b = true;
        
        g = true;
        s=true;
        c=true;
       }
       click=0;
    }//GEN-LAST:event_smileMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(birthday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(birthday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(birthday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(birthday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new birthday().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel cakebase;
    private javax.swing.JLabel candel;
    private javax.swing.JButton done;
    private javax.swing.JLabel glaze;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel smile;
    // End of variables declaration//GEN-END:variables
}
