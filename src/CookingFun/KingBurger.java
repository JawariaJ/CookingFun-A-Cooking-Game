/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//  *************************REFERENCE ************
//**** Draging Label Icons Using Java Swing (Os Project Part 3)*****
package CookingFun;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author toshiba
 */

// MOUSE PRESSED : The "mouse pressed" event. This MouseEvent occurs when a mouse button is pushed down.
// MOUSE DRAGGED : The "mouse dragged" event. This MouseEvent occurs when the mouse position changes while a mouse button is pressed.
// setLocation(int x, int y) : Constructs and initializes a point at the specified (x, y) location in the coordinate space.


public class KingBurger extends javax.swing.JFrame {

   
    private Connection con;
    private Statement st;
    private ResultSet rs;
// these boolean var are used for enabling and disabling the ingredients(labels)
    boolean b, t, p, c, s, k, o;
    
    // score counting 
    protected int count;
    
//  used for calculting the clicks on ingredient
    int click;
    // this var is used for looser frame's try again button 
    // we use it for transfering the string to looser frame 
    // suppose if user is playing on king burger interface and he lost with the score 0 and < 0 
    // then he want to try it again , for this purpose to show him the king burger interface again 
    // for this we are passing the string alphabet as the type of burger user is playing ,eg: for king "k" , for fish burger "f" etc
    // and then for making same burger again he will get the same interface again
    String cond;

    // mouse pressed on the scrren
    int xmouse1;  
    int ymouse1;
    
    // mouse dragged on the screen 
    int x2;
    int y2;
    
    // mouse pressed on the object(ingredient)
    int xmousebottom;
    int ymousebottom;
    int xmousetop;
    int ymousetop;
    int xmouseonion;
    int ymouseonion;
    int xmousesalad;
    int ymousesalad;

    int xmouseket;
    int ymouseket;
    int xmousepettey;
    int ymousepettey;
    int xmousechee;
    int ymousechee;

    /**
     * Creates new form Plain
     */
     public KingBurger() {
      
        
        initComponents();
       // this.setSize(900, 600);
        click = 0;
        count = 0;
        b = true;
        t = false;
        c = false;
        p = false;
        s = false;
        k = false;
        o = false;

       

    }

//    public KingBurger(String name) {
//       
//        
//        initComponents();
//        this.name=name ;
//        this.setSize(900, 600);
//        click = 0;
//        count = 0;
//        b = true;
//        t = false;
//        c = false;
//        p = false;
//        s = false;
//        k = false;
//        o = false;
//
//        try {
//            String urlDB = System.getProperty("user.dir").concat("\\records1.accdb");
//
//            con = DriverManager.getConnection("jdbc:ucanaccess://" + urlDB + ";memory=");
//            st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
//            rs = st.executeQuery("select* from records");
//        } catch (SQLException ex) {
//
//            ex.printStackTrace();
//        }
//
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        done = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        top = new javax.swing.JLabel();
        onion = new javax.swing.JLabel();
        ketchup = new javax.swing.JLabel();
        salad = new javax.swing.JLabel();
        cheese = new javax.swing.JLabel();
        pettey = new javax.swing.JLabel();
        bottom = new javax.swing.JLabel();
        cutting = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));

        done.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/doneYellow.PNG"))); // NOI18N
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 204, 102));
        jLabel19.setText("BACK");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 204, 51));
        jLabel20.setText("DONE");

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/backYellow.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 44, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel1);
        jPanel1.setBounds(690, 0, 170, 400);

        top.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/bun top.png"))); // NOI18N
        top.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                topMouseDragged(evt);
            }
        });
        top.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                topMousePressed(evt);
            }
        });
        jPanel3.add(top);
        top.setBounds(10, 410, 113, 70);

        onion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/imageedit_11_4840933673.png"))); // NOI18N
        onion.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                onionMouseDragged(evt);
            }
        });
        onion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                onionMousePressed(evt);
            }
        });
        jPanel3.add(onion);
        onion.setBounds(740, 420, 107, 60);

        ketchup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/ketchup.png"))); // NOI18N
        ketchup.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                ketchupMouseDragged(evt);
            }
        });
        ketchup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ketchupMousePressed(evt);
            }
        });
        jPanel3.add(ketchup);
        ketchup.setBounds(480, 430, 91, 38);

        salad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/salad.png"))); // NOI18N
        salad.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                saladMouseDragged(evt);
            }
        });
        salad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                saladMousePressed(evt);
            }
        });
        jPanel3.add(salad);
        salad.setBounds(590, 420, 130, 61);

        cheese.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/cheese.png"))); // NOI18N
        cheese.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                cheeseMouseDragged(evt);
            }
        });
        cheese.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cheeseMousePressed(evt);
            }
        });
        jPanel3.add(cheese);
        cheese.setBounds(400, 420, 65, 49);

        pettey.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/pettay.png"))); // NOI18N
        pettey.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                petteyMouseDragged(evt);
            }
        });
        pettey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                petteyMousePressed(evt);
            }
        });
        jPanel3.add(pettey);
        pettey.setBounds(270, 420, 101, 60);

        bottom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/bunBottom.png"))); // NOI18N
        bottom.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                bottomMouseDragged(evt);
            }
        });
        bottom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bottomMousePressed(evt);
            }
        });
        jPanel3.add(bottom);
        bottom.setBounds(140, 420, 118, 59);

        cutting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/cutting-board128.png"))); // NOI18N
        jPanel3.add(cutting);
        cutting.setBounds(310, 220, 150, 128);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/new kitchen.PNG"))); // NOI18N
        jLabel18.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel18MouseDragged(evt);
            }
        });
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel18MousePressed(evt);
            }
        });
        jPanel3.add(jLabel18);
        jLabel18.setBounds(0, 0, 910, 520);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
       // if all the ingrediets true only then done button will be enabled
        if (b && p && t && c && s && k && o) {
          
          try {
              String urlDB = System.getProperty("user.dir").concat("\\records1.accdb");

            con = DriverManager.getConnection("jdbc:ucanaccess://" + urlDB + ";memory=true");
            st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery("select* from records");
           while(rs.next()){
        
            
           
                PreparedStatement s = con.prepareStatement("UPDATE records SET Score=? where Name='"+ login.name +"'");
                
           // successfully done 
                if (count > 0 && count < 7) {
                    s.setInt(1,count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added");

                    Successful_score S = new Successful_score(count);
                    S.setVisible(true);
                    this.dispose();
                } 
                // looser
                else if (count <= 0) {
                    s.setInt(1,count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added");
                    // cond will store string according to menu name eg: king burger so "k" 
                    cond = "k";
                    LooserFrame l = new LooserFrame(count, cond);
                    l.setVisible(true);
                    this.dispose();

                } 
                // full score and winner
                else if (count > 6) {
                    s.setInt(1,count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added");

                    Winner w = new Winner();
                    w.setVisible(true);
                   this.dispose();
                }
            } 
         
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
         finally{
        try {
            con.close();
             st.close();
              rs.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(BakedPlainPizza.class.getName()).log(Level.SEVERE, null, ex);
        } 
       
        }}
        

    }//GEN-LAST:event_doneActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        BurgerMenu mf = new BurgerMenu();

        mf.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void jLabel18MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MousePressed
       //   mouse presssed and x, y coordinates of screen are stored
      
       xmouse1 = evt.getX();   // Returns the horizontal x position of the event relative to the source component.
        ymouse1 = evt.getY();   // Returns the vertical y position of the event relative to the source component.
    }//GEN-LAST:event_jLabel18MousePressed

    private void jLabel18MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseDragged
        int xdrag1 = evt.getXOnScreen();  // Returns the absolute horizontal x position of the event.
        int ydrag1 = evt.getYOnScreen();   // Returns the absolute vertical y position of the event.
        x2 = xdrag1;
        y2 = ydrag1;
    }//GEN-LAST:event_jLabel18MouseDragged

    private void topMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topMousePressed
      // when elem pressed clicks will be incremnted
        click++;
        if (t) {
            xmousetop = evt.getX();
            ymousetop = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }
    }//GEN-LAST:event_topMousePressed

    private void topMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topMouseDragged
        if (t) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            top.setLocation((x - x2) - (xmousetop - xmouse1), (y - y2) - (ymousetop - ymouse1));
            top.setVisible(true);

        }
        click = 0;// TODO add your handling code here:
    }//GEN-LAST:event_topMouseDragged

    private void onionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onionMousePressed
        click++;
        if (o) {
            xmouseonion = evt.getX();
            ymouseonion = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }// TODO add your handling code here:
    }//GEN-LAST:event_onionMousePressed

    private void onionMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onionMouseDragged
        if (o) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            onion.setLocation((x - x2) - (xmouseonion - xmouse1), (y - y2) - (ymouseonion - ymouse1));
            onion.setVisible(true);
            b = true;
            t = true;
            c = true;
            p = true;
            s = true;
            k = true;
            o = true;
        }
        click = 0;// TODO add your handling code here:
    }//GEN-LAST:event_onionMouseDragged

    private void ketchupMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ketchupMousePressed
        click++;
        if (k) {
            xmouseket = evt.getX();

            ymouseket = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }

    }//GEN-LAST:event_ketchupMousePressed

    private void ketchupMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ketchupMouseDragged
        if (k) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            ketchup.setLocation((x - x2) - (xmouseket - xmouse1), (y - y2) - (ymouseket - ymouse1));
            ketchup.setVisible(true);
            b = true;
            t = false;
            c = true;
            p = true;
            s = true;
            k = true;
            o = true;
        }
        click = 0;// TODO add your handling code here:
    }//GEN-LAST:event_ketchupMouseDragged

    private void saladMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saladMousePressed
        click++;
        if (s) {
            xmousesalad = evt.getX();
            ymousesalad = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }


    }//GEN-LAST:event_saladMousePressed

    private void saladMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saladMouseDragged
        if (s) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            salad.setLocation((x - x2) - (xmousesalad - xmouse1), (y - y2) - (ymousesalad - ymouse1));
            salad.setVisible(true);
            b = true;
            t = false;
            c = true;
            p = true;
            s = true;
            k = true;
            o = false;
        }
        click = 0;// TODO add your handling code here:
    }//GEN-LAST:event_saladMouseDragged

    private void cheeseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cheeseMousePressed
        click++;
        if (c) {
            xmousechee = evt.getX();
            ymousechee = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }// TODO add your handling code here:
    }//GEN-LAST:event_cheeseMousePressed

    private void cheeseMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cheeseMouseDragged
        if (c) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            cheese.setLocation((x - x2) - (xmousechee - xmouse1), (y - y2) - (ymousechee - ymouse1));
            cheese.setVisible(true);
            b = true;
            t = false;
            c = true;
            p = true;
            s = true;
            k = false;
            o = false;
        }
        click = 0;// TODO add your handling code here:
    }//GEN-LAST:event_cheeseMouseDragged

    private void petteyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_petteyMousePressed
        click++;
        if (p) {
            xmousepettey = evt.getX();
            ymousepettey = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }// TODO add your handling code here:
    }//GEN-LAST:event_petteyMousePressed

    private void petteyMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_petteyMouseDragged
        if (p) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            pettey.setLocation((x - x2) - (xmousepettey - xmouse1), (y - y2) - (ymousepettey - ymouse1));
            pettey.setVisible(true);
            b = true;
            t = false;
            c = true;
            p = true;
            s = false;
            k = false;
            o = false;

        }
        click = 0;// TODO add your handling code here:
    }//GEN-LAST:event_petteyMouseDragged

    private void bottomMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bottomMousePressed
        click++;
        if (b) {
            xmousebottom = evt.getX();
            ymousebottom = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }// TODO add your handling code here:
    }//GEN-LAST:event_bottomMousePressed

    private void bottomMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bottomMouseDragged
        if (b) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            bottom.setLocation((x - x2) - (xmousebottom - xmouse1), (y - y2) - (ymousebottom - ymouse1));
            bottom.setVisible(true);
            b = true;
            t = false;
            c = false;
            p = true;
            s = false;
            k = false;
            o = false;

        }
        click = 0;// TODO add your handling code here:
    }//GEN-LAST:event_bottomMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KingBurger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KingBurger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KingBurger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KingBurger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KingBurger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel bottom;
    private javax.swing.JLabel cheese;
    private javax.swing.JLabel cutting;
    private javax.swing.JButton done;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel ketchup;
    private javax.swing.JLabel onion;
    private javax.swing.JLabel pettey;
    private javax.swing.JLabel salad;
    private javax.swing.JLabel top;
    // End of variables declaration//GEN-END:variables
}
