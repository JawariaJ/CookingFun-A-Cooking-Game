/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CookingFun;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import java.time.Duration;
import java.time.Instant;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author toshiba
 */
public class SimpleBurger extends javax.swing.JFrame {

    private Connection con;
    private Statement st;
    private ResultSet rs;

    // these boolean var are used for enabling and disabling the ingredients(labels)
    boolean b, t, p;
      // score counting 
    protected int count;
    //  used for calculting the clicks on ingredient
    int click;
    
    // this var is used for looser frame's try again button 
    // we use it for transfering the string to looser frame 
    // suppose if user is playing on simple burger interface and he lost with the score 0 and < 0 
    // then he want to try it again , for this purpose to show him the simple burger interface again 
    // so we are passing the string alphabet as the "type of burger" user is playing ,eg: for king "k" , for fish burger "f" etc
    // and then for making same burger again he will get the same interface again
    String cond;

    // mouse pressed on the scrren
    int xmouse1; // label1
    int ymouse1;// label2

      // mouse pressed on the object(ingredient)
    int xmousebottom;
    int ymousebottom;
    int xmousetop;
    int ymousetop;
    int xmousepettey;
    int ymousepettey;
  
// mouse dragged on the screen 
    int x2;
    int y2;
   
    /**
     * Creates new form Simple
     */
    public SimpleBurger() {

        click = 0;
        count = 0;
        b = true;
        t = false;

        p = false;

        initComponents();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        done = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        top = new javax.swing.JLabel();
        pettey = new javax.swing.JLabel();
        bottom = new javax.swing.JLabel();
        cutBoard = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 255, 0));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 204, 0));
        jLabel19.setText("Go Back");

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/backYellow.PNG"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        done.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/doneYellow.PNG"))); // NOI18N
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 204, 0));
        jLabel16.setText("Done");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(319, 319, 319))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel16)
                .addGap(74, 74, 74))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(625, 0, 150, 400);

        top.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/bun top.png"))); // NOI18N
        top.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                topMouseDragged(evt);
            }
        });
        top.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                topMousePressed(evt);
            }
        });
        jPanel1.add(top);
        top.setBounds(40, 430, 113, 70);

        pettey.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/pettay.png"))); // NOI18N
        pettey.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                petteyMouseDragged(evt);
            }
        });
        pettey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                petteyMousePressed(evt);
            }
        });
        jPanel1.add(pettey);
        pettey.setBounds(570, 430, 101, 60);

        bottom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/bunBottom.png"))); // NOI18N
        bottom.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                bottomMouseDragged(evt);
            }
        });
        bottom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bottomMousePressed(evt);
            }
        });
        jPanel1.add(bottom);
        bottom.setBounds(300, 440, 118, 59);

        cutBoard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/cutting-board128.png"))); // NOI18N
        jPanel1.add(cutBoard);
        cutBoard.setBounds(290, 220, 130, 128);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/new kitchen.PNG"))); // NOI18N
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 770, 530);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
       // if all the ingrediets true only then done button will be enabled
        if (b && p && t) {
            try {
                String urlDB = System.getProperty("user.dir").concat("\\records1.accdb");

            con = DriverManager.getConnection("jdbc:ucanaccess://" + urlDB + ";memory=true");
            st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery("select* from records");
                 while(rs.next()){
                PreparedStatement s = con.prepareStatement("UPDATE records SET Score=? where Name='"+ login.name +"'");
               
                // successfully done 
                if (count > 0 && count < 3) {

                    s.setInt(1, count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added");
                    
                    Successful_score S = new Successful_score(count);
                    S.setVisible(true);
                    this.dispose();
                    
                } 
                // looser
                else if (count <= 0) {
                    s.setInt(1, count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added");

                    // cond will store string according to menu name eg: simple burger so "s" 
                    cond = "s";
                    LooserFrame l = new LooserFrame(count, cond);
                    l.setVisible(true);
                   this.dispose();
                    
                } 
                // full score and winner
                else if (count > 2) {
                    s.setInt(1, count);
                    s.executeUpdate();
                    JOptionPane.showMessageDialog(this, "score added");

                    Winner w = new Winner();
                    w.setVisible(true);
                  this.dispose();
                }
                 }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
           
                 finally{
        try {
            con.close();
             st.close();
              rs.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(BakedPlainPizza.class.getName()).log(Level.SEVERE, null, ex);
        } 
       
        }
        }


    }//GEN-LAST:event_doneActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        BurgerMenu mf = new BurgerMenu();
        mf.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void bottomMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bottomMouseDragged
        if (b) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            bottom.setLocation((x - x2) - (xmousebottom - xmouse1), (y - y2) - (ymousebottom - ymouse1));
            bottom.setVisible(true);
            b = true;
            p = true;
            t = false;

        }
        click = 0;

    }//GEN-LAST:event_bottomMouseDragged

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        //   mouse presssed and x, y coordinates of screen are stored
        xmouse1 = evt.getX();
        ymouse1 = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        int xdrag1 = evt.getXOnScreen();
        int ydrag1 = evt.getYOnScreen();
        x2 = xdrag1;
        y2 = ydrag1;
    }//GEN-LAST:event_jLabel1MouseDragged

    private void bottomMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bottomMousePressed
         // when elem pressed clicks will be incremnted
        click++;
        if (b) {
            xmousebottom = evt.getX();
            ymousebottom = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }
    }//GEN-LAST:event_bottomMousePressed

    private void topMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topMouseDragged
        if (t) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            top.setLocation((x - x2) - (xmousetop - xmouse1), (y - y2) - (ymousetop - ymouse1));
            top.setVisible(true);

        }
        click = 0;
    }//GEN-LAST:event_topMouseDragged

    private void topMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topMousePressed
        click++;
        if (t) {
            xmousetop = evt.getX();
            ymousetop = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }
    }//GEN-LAST:event_topMousePressed

    private void petteyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_petteyMousePressed
        click++;
        if (p) {
            xmousepettey = evt.getX();
            ymousepettey = evt.getY();
            if (click == 1) {
                count++;
            }
        } else {
            count--;
        }
    }//GEN-LAST:event_petteyMousePressed

    private void petteyMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_petteyMouseDragged
        if (p) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            pettey.setLocation((x - x2) - (xmousepettey - xmouse1), (y - y2) - (ymousepettey - ymouse1));
            pettey.setVisible(true);
            b = true;
            p = true;
            t = true;

        }
        click = 0;
    }//GEN-LAST:event_petteyMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimpleBurger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimpleBurger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimpleBurger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleBurger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new SimpleBurger().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel bottom;
    private javax.swing.JLabel cutBoard;
    private javax.swing.JButton done;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel pettey;
    private javax.swing.JLabel top;
    // End of variables declaration//GEN-END:variables
}
